generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URL")
}

model SiteConfig {
    id          String   @id @default(cuid()) @map("_id")
    siteName    String
    siteUrl     String
    siteLogo    String
    siteFavicon String
    siteDesc    String
    siteAuthor  String
    siteEmail   String
    sitePhone   String
    siteAddress String
    siteCity    String
    siteState   String
    siteZip     String
    siteCountry String
    siteFooter  String
    siteTheme   String
    siteLang    String
    sitePages   String[]
    siteSocial  String[]
    siteMeta    String[]
    siteCustom  String[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model User {
    id        String   @id @default(uuid()) @map("_id")
    createdAt DateTime @default(now())
    token     String?
    password  String   @default("de78570e8ceae914850ff37900a35eed8346ff04cd9afd911b7fc0ce0213b786") //mate2022

    name   String
    class  Int
    grade  Int
    status Int
    tel    Int

    active Boolean @default(false)
    Music  Music[]
}

// Prisma Data Model Documention:
// https://www.prisma.io/docs/concepts/components/prisma-schema/data-model

model MusicVoteSession {
    id String @id @default(uuid()) @map("_id")

    title       String
    description String
    deadline    DateTime @default(now())
    musics      Music[]
    viewTimes   Int      @default(0)

    status Int @default(0)
}

model Music {
    id          String            @id @default(uuid()) @map("_id")
    submitterId String
    sessionId   String
    session     MusicVoteSession? @relation(fields: [sessionId], references: [id])

    submitter User   @relation(fields: [submitterId], references: [id])
    reason    String
    vote      Int
    status    Int

    title   String
    lyrics  String
    artist  String
    playUrl String
}
